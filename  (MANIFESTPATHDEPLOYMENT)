---
# Source: kube-arangodb/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: arango-deployment-operator
  namespace: default
  labels:
      app.kubernetes.io/name: kube-arangodb
      helm.sh/chart: kube-arangodb-1.0.0
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/instance: deployment
      release: deployment
---
# Source: kube-arangodb/templates/deployment-operator/rbac-admin.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: arango-deployment-operator-rbac-deployment-admin
    namespace: default
    labels:
        app.kubernetes.io/name: kube-arangodb
        helm.sh/chart: kube-arangodb-1.0.0
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/instance: deployment
        release: deployment
rules:
    - apiGroups: ["database.arangodb.com"]
      resources: ["arangodeployments"]
      verbs: ["*"]
---
# Source: kube-arangodb/templates/deployment-operator/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: arango-deployment-operator-rbac-deployment
    namespace: default
    labels:
        app.kubernetes.io/name: kube-arangodb
        helm.sh/chart: kube-arangodb-1.0.0
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/instance: deployment
        release: deployment
rules:
    - apiGroups: ["database.arangodb.com"]
      resources: ["arangodeployments"]
      verbs: ["*"]
    - apiGroups: ["apiextensions.k8s.io"]
      resources: ["customresourcedefinitions"]
      verbs: ["get", "list", "watch"]
    - apiGroups: [""]
      resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "events", "secrets"]
      verbs: ["*"]
    - apiGroups: [""]
      resources: ["namespaces", "nodes"]
      verbs: ["get", "list"]
    - apiGroups: ["apps"]
      resources: ["deployments", "replicasets"]
      verbs: ["get"]
    - apiGroups: ["policy"]
      resources: ["poddisruptionbudgets"]
      verbs: ["get", "create", "delete"]
    - apiGroups: ["storage.k8s.io"]
      resources: ["storageclasses"]
      verbs: ["get", "list"]
    - apiGroups: ["monitoring.coreos.com"]
      resources: ["servicemonitors"]
      verbs: ["get", "create", "delete"]
---
# Source: kube-arangodb/templates/deployment-operator/rb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: arango-deployment-operator-rbac-deployment
    namespace: default
    labels:
        app.kubernetes.io/name: kube-arangodb
        helm.sh/chart: kube-arangodb-1.0.0
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/instance: deployment
        release: deployment
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: arango-deployment-operator-rbac-deployment
subjects:
    - kind: ServiceAccount
      name: arango-deployment-operator
      namespace: default
---
# Source: kube-arangodb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: arango-deployment-operator
  namespace: default
  labels:
    app.kubernetes.io/name: kube-arangodb
    helm.sh/chart: kube-arangodb-1.0.0
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: deployment
    release: deployment
spec:
  ports:
    - name: server
      port: 8528
      protocol: TCP
      targetPort: 8528
  selector:
    app.kubernetes.io/name: kube-arangodb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: deployment
    release: deployment
    role: leader
  type: ClusterIP
---
# Source: kube-arangodb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
    name: arango-deployment-operator
    namespace: default
    labels:
        app.kubernetes.io/name: kube-arangodb
        helm.sh/chart: kube-arangodb-1.0.0
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/instance: deployment
        release: deployment
spec:
    replicas: 2
    strategy:
        type: Recreate
        
    selector:
        matchLabels:
            app.kubernetes.io/name: kube-arangodb
            app.kubernetes.io/managed-by: Tiller
            app.kubernetes.io/instance: deployment
            release: deployment
    template:
        metadata:
            labels:
                app.kubernetes.io/name: kube-arangodb
                helm.sh/chart: kube-arangodb-1.0.0
                app.kubernetes.io/managed-by: Tiller
                app.kubernetes.io/instance: deployment
                release: deployment
        spec:
            serviceAccountName: arango-deployment-operator
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                    - matchExpressions:
                        - key: beta.kubernetes.io/arch
                          operator: amd64
            containers:
                - name: operator
                  imagePullPolicy: Always
                  image: arangodb/kube-arangodb@sha256:8de8cba7727bf4bf2b9f5ac943418afb4a139cfc51627a57a6e5febdbc8fbcb2
                  args:
                    - --operator.deployment
                    - --chaos.allowed=false
                  env:
                      - name: MY_POD_NAMESPACE
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.namespace
                      - name: MY_POD_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.name
                      - name: MY_POD_IP
                        valueFrom:
                            fieldRef:
                                fieldPath: status.podIP
                  ports:
                      - name: metrics
                        containerPort: 8528
                  securityContext:
                    capabilities:
                      drop:
                        - 'ALL'
                  resources:
                      limits:
                        cpu: 1
                        memory: 256Mi
                      requests:
                        cpu: 1
                        memory: 256Mi
                      
                  livenessProbe:
                      httpGet:
                          path: /health
                          port: 8528
                          scheme: HTTPS
                      initialDelaySeconds: 5
                      periodSeconds: 10
                  readinessProbe:
                      httpGet:
                          path: /ready/deployment
                          port: 8528
                          scheme: HTTPS
                      initialDelaySeconds: 5
                      periodSeconds: 10
            tolerations:
                - key: "node.kubernetes.io/unreachable"
                  operator: "Exists"
                  effect: "NoExecute"
                  tolerationSeconds: 5
                - key: "node.kubernetes.io/not-ready"
                  operator: "Exists"
                  effect: "NoExecute"
                  tolerationSeconds: 5

---
# Source: kube-arangodb/templates/deployment-replications-operator/rb.yaml

---
# Source: kube-arangodb/templates/deployment-replications-operator/rbac-admin.yaml

---
# Source: kube-arangodb/templates/deployment-replications-operator/rbac.yaml

---
# Source: kube-arangodb/templates/storage-operator/crd.yaml

---
# Source: kube-arangodb/templates/storage-operator/rb.yaml

---
# Source: kube-arangodb/templates/storage-operator/rbac-admin.yaml

---
# Source: kube-arangodb/templates/storage-operator/rbac.yaml

