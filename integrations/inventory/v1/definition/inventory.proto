//
// DISCLAIMER
//
// Copyright 2025 ArangoDB GmbH, Cologne, Germany
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright holder is ArangoDB GmbH, Cologne, Germany
//

syntax = "proto3";

package inventory;

option go_package = "github.com/arangodb/kube-arangodb/integrations/inventory/v1/definition";

// Platform Inventory
message Inventory {
  // Current Envoy Configuration details
  optional InventoryConfiguration configuration = 1;
  // ArangoDB Deployment Configuration
  optional ArangoDBConfiguration arangodb = 2;
  // ArangoDB Platform Networking
  optional InventoryNetworking networking = 3;
  // ArangoDB Platform Spec
  optional InventoryPlatform platform = 4;
}

// Envoy Configuration details
message InventoryConfiguration {
  // Configuration hash
  string hash = 1;
}

// Platform Configuration details
message InventoryPlatform {
  // Defines Services definition
  map<string, InventoryPlatformService> services = 1;
}

// Envoy Service Configuration details
message InventoryPlatformService {
  // Service Version
  string version = 1;

  // Defines if Service is Ready
  bool ready = 2;
}

// Envoy Configuration details
message InventoryNetworking {
  // Defines Routes definition
  map<string, InventoryNetworkingRoute> routes = 1;
}

// Envoy Route Configuration details
message InventoryNetworkingRoute {
  oneof route {
    // Path Route
    InventoryNetworkingRoutePath path = 1;
  }
}

// Envoy Route Path Configuration details
message InventoryNetworkingRoutePath {
  // Path definition
  string path = 1;
}

// ArangoDB Deployment Mode
enum ArangoDBMode {
  // Single Mode
  Single = 0;
  // ActiveFailover Mode
  ActiveFailover = 1;
  // Cluster Mode
  Cluster = 2;
}

// ArangoDB Deployment Edition
enum ArangoDBEdition {
  // Community Edition
  Community = 0;
  // Enterprise Edition
  Enterprise = 1;
}

// ArangoDB Sharding Mode
enum ArangoDBSharding {
  // Sharded Sharding Mode
  Sharded = 0;
  // OneShardEnforced Sharding Mode
  OneShardEnforced = 1;
}

// ArangoDB Deployment Configuration
message ArangoDBConfiguration {
  // ArangoDB Deployment Mode
  ArangoDBMode mode = 1;
  // ArangoDB Deployment Edition
  ArangoDBEdition edition = 2;
  // ArangoDB Deployment Version
  string version = 3;
  // ArangoDB Sharding Mode
  ArangoDBSharding sharding = 4;
}