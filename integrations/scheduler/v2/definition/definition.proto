//
// DISCLAIMER
//
// Copyright 2024 ArangoDB GmbH, Cologne, Germany
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright holder is ArangoDB GmbH, Cologne, Germany
//

syntax = "proto3";

package scheduler;

import "integrations/scheduler/v2/definition/helm.proto";
import "integrations/scheduler/v2/definition/kubernetes.proto";
import "integrations/shared/v1/definition/empty.proto";

option go_package = "github.com/arangodb/kube-arangodb/integrations/scheduler/v2/definition";

// Integration Service
service SchedulerV2 {
  // Invalidates local ServiceDiscover cache
  rpc InvalidateCache(shared.Empty) returns (shared.Empty);
  // Ensure that Helm Client is able to communicate with Kubernetes
  rpc Alive(shared.Empty) returns (shared.Empty);

  // Executes Helm List Action
  rpc List(SchedulerV2ListRequest) returns (SchedulerV2ListResponse);
  // Executes Helm Status Action
  rpc Status(SchedulerV2StatusRequest) returns (SchedulerV2StatusResponse);
  // Executes Helm Status Action and fetch Resources from Kubernetes API
  rpc StatusObjects(SchedulerV2StatusObjectsRequest) returns (SchedulerV2StatusObjectsResponse);
  // Executes Helm Install Action
  rpc Install(SchedulerV2InstallRequest) returns (SchedulerV2InstallResponse);
  // Executes Helm Upgrade Action
  rpc Upgrade(SchedulerV2UpgradeRequest) returns (SchedulerV2UpgradeResponse);
  // Executes Helm Uninstall Action
  rpc Uninstall(SchedulerV2UninstallRequest) returns (SchedulerV2UninstallResponse);
  // Executes Helm Test Action
  rpc Test(SchedulerV2TestRequest) returns (SchedulerV2TestResponse);

  // Discovers Kubernetes API Resources for Group
  rpc DiscoverAPIResources(SchedulerV2DiscoverAPIResourcesRequest) returns (SchedulerV2DiscoverAPIResourcesResponse);
  // Discovers Kubernetes API Resources for Kind
  rpc DiscoverAPIResource(SchedulerV2DiscoverAPIResourceRequest) returns (SchedulerV2DiscoverAPIResourceResponse);

  // Gets Kubernetes objects from the API
  rpc KubernetesGet(SchedulerV2KubernetesGetRequest) returns (SchedulerV2KubernetesGetResponse);
}

