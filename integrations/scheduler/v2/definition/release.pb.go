//
// DISCLAIMER
//
// Copyright 2024 ArangoDB GmbH, Cologne, Germany
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright holder is ArangoDB GmbH, Cologne, Germany
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: integrations/scheduler/v2/definition/release.proto

package definition

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Release Object Info Status Enum
type SchedulerV2ReleaseInfoStatus int32

const (
	// Unknown
	SchedulerV2ReleaseInfoStatus_SCHEDULER_V2_RELEASE_INFO_STATUS_UNKNOWN_UNSPECIFIED SchedulerV2ReleaseInfoStatus = 0
	// Release is Deployed
	SchedulerV2ReleaseInfoStatus_SCHEDULER_V2_RELEASE_INFO_STATUS_DEPLOYED SchedulerV2ReleaseInfoStatus = 1
	// Release is Uninstalled, but not removed
	SchedulerV2ReleaseInfoStatus_SCHEDULER_V2_RELEASE_INFO_STATUS_UNINSTALLED SchedulerV2ReleaseInfoStatus = 2
	// Release is Hibernated
	SchedulerV2ReleaseInfoStatus_SCHEDULER_V2_RELEASE_INFO_STATUS_SUPERSEDED SchedulerV2ReleaseInfoStatus = 3
	// Release is Failed
	SchedulerV2ReleaseInfoStatus_SCHEDULER_V2_RELEASE_INFO_STATUS_FAILED SchedulerV2ReleaseInfoStatus = 4
	// Release is Uninstalling
	SchedulerV2ReleaseInfoStatus_SCHEDULER_V2_RELEASE_INFO_STATUS_UNINSTALLING SchedulerV2ReleaseInfoStatus = 5
	// Release is Pending Installation
	SchedulerV2ReleaseInfoStatus_SCHEDULER_V2_RELEASE_INFO_STATUS_PENDINGINSTALL SchedulerV2ReleaseInfoStatus = 6
	// Release is Pending Upgrade
	SchedulerV2ReleaseInfoStatus_SCHEDULER_V2_RELEASE_INFO_STATUS_PENDINGUPGRADE SchedulerV2ReleaseInfoStatus = 7
	// Release is Pending Rollback
	SchedulerV2ReleaseInfoStatus_SCHEDULER_V2_RELEASE_INFO_STATUS_PENDINGROLLBACK SchedulerV2ReleaseInfoStatus = 8
)

// Enum value maps for SchedulerV2ReleaseInfoStatus.
var (
	SchedulerV2ReleaseInfoStatus_name = map[int32]string{
		0: "SCHEDULER_V2_RELEASE_INFO_STATUS_UNKNOWN_UNSPECIFIED",
		1: "SCHEDULER_V2_RELEASE_INFO_STATUS_DEPLOYED",
		2: "SCHEDULER_V2_RELEASE_INFO_STATUS_UNINSTALLED",
		3: "SCHEDULER_V2_RELEASE_INFO_STATUS_SUPERSEDED",
		4: "SCHEDULER_V2_RELEASE_INFO_STATUS_FAILED",
		5: "SCHEDULER_V2_RELEASE_INFO_STATUS_UNINSTALLING",
		6: "SCHEDULER_V2_RELEASE_INFO_STATUS_PENDINGINSTALL",
		7: "SCHEDULER_V2_RELEASE_INFO_STATUS_PENDINGUPGRADE",
		8: "SCHEDULER_V2_RELEASE_INFO_STATUS_PENDINGROLLBACK",
	}
	SchedulerV2ReleaseInfoStatus_value = map[string]int32{
		"SCHEDULER_V2_RELEASE_INFO_STATUS_UNKNOWN_UNSPECIFIED": 0,
		"SCHEDULER_V2_RELEASE_INFO_STATUS_DEPLOYED":            1,
		"SCHEDULER_V2_RELEASE_INFO_STATUS_UNINSTALLED":         2,
		"SCHEDULER_V2_RELEASE_INFO_STATUS_SUPERSEDED":          3,
		"SCHEDULER_V2_RELEASE_INFO_STATUS_FAILED":              4,
		"SCHEDULER_V2_RELEASE_INFO_STATUS_UNINSTALLING":        5,
		"SCHEDULER_V2_RELEASE_INFO_STATUS_PENDINGINSTALL":      6,
		"SCHEDULER_V2_RELEASE_INFO_STATUS_PENDINGUPGRADE":      7,
		"SCHEDULER_V2_RELEASE_INFO_STATUS_PENDINGROLLBACK":     8,
	}
)

func (x SchedulerV2ReleaseInfoStatus) Enum() *SchedulerV2ReleaseInfoStatus {
	p := new(SchedulerV2ReleaseInfoStatus)
	*p = x
	return p
}

func (x SchedulerV2ReleaseInfoStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SchedulerV2ReleaseInfoStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_integrations_scheduler_v2_definition_release_proto_enumTypes[0].Descriptor()
}

func (SchedulerV2ReleaseInfoStatus) Type() protoreflect.EnumType {
	return &file_integrations_scheduler_v2_definition_release_proto_enumTypes[0]
}

func (x SchedulerV2ReleaseInfoStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SchedulerV2ReleaseInfoStatus.Descriptor instead.
func (SchedulerV2ReleaseInfoStatus) EnumDescriptor() ([]byte, []int) {
	return file_integrations_scheduler_v2_definition_release_proto_rawDescGZIP(), []int{0}
}

// Release Object
type SchedulerV2Release struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Release Name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Release Namespace
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Release Values Json Bytes
	Values []byte `protobuf:"bytes,3,opt,name=values,proto3" json:"values,omitempty"`
	// Release Version
	Version int64 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	// Release Labels
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Release Info
	Info *SchedulerV2ReleaseInfo `protobuf:"bytes,6,opt,name=info,proto3,oneof" json:"info,omitempty"`
}

func (x *SchedulerV2Release) Reset() {
	*x = SchedulerV2Release{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulerV2Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerV2Release) ProtoMessage() {}

func (x *SchedulerV2Release) ProtoReflect() protoreflect.Message {
	mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerV2Release.ProtoReflect.Descriptor instead.
func (*SchedulerV2Release) Descriptor() ([]byte, []int) {
	return file_integrations_scheduler_v2_definition_release_proto_rawDescGZIP(), []int{0}
}

func (x *SchedulerV2Release) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SchedulerV2Release) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SchedulerV2Release) GetValues() []byte {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *SchedulerV2Release) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SchedulerV2Release) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SchedulerV2Release) GetInfo() *SchedulerV2ReleaseInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// Release Object Info
type SchedulerV2ReleaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Release First Deployed time
	FirstDeployed *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=first_deployed,json=firstDeployed,proto3,oneof" json:"first_deployed,omitempty"`
	// Release Last Deployed time
	LastDeployed *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_deployed,json=lastDeployed,proto3,oneof" json:"last_deployed,omitempty"`
	// Release Deleted time
	Deleted *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=deleted,proto3,oneof" json:"deleted,omitempty"`
	// Release Info Description
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Release Info Notes
	Notes string `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	// Release Info Status
	Status SchedulerV2ReleaseInfoStatus `protobuf:"varint,6,opt,name=status,proto3,enum=scheduler.SchedulerV2ReleaseInfoStatus" json:"status,omitempty"`
	// Release Resources
	Resources []*SchedulerV2ReleaseInfoResource `protobuf:"bytes,7,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *SchedulerV2ReleaseInfo) Reset() {
	*x = SchedulerV2ReleaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulerV2ReleaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerV2ReleaseInfo) ProtoMessage() {}

func (x *SchedulerV2ReleaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerV2ReleaseInfo.ProtoReflect.Descriptor instead.
func (*SchedulerV2ReleaseInfo) Descriptor() ([]byte, []int) {
	return file_integrations_scheduler_v2_definition_release_proto_rawDescGZIP(), []int{1}
}

func (x *SchedulerV2ReleaseInfo) GetFirstDeployed() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstDeployed
	}
	return nil
}

func (x *SchedulerV2ReleaseInfo) GetLastDeployed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastDeployed
	}
	return nil
}

func (x *SchedulerV2ReleaseInfo) GetDeleted() *timestamppb.Timestamp {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *SchedulerV2ReleaseInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SchedulerV2ReleaseInfo) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *SchedulerV2ReleaseInfo) GetStatus() SchedulerV2ReleaseInfoStatus {
	if x != nil {
		return x.Status
	}
	return SchedulerV2ReleaseInfoStatus_SCHEDULER_V2_RELEASE_INFO_STATUS_UNKNOWN_UNSPECIFIED
}

func (x *SchedulerV2ReleaseInfo) GetResources() []*SchedulerV2ReleaseInfoResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

// Release Object Info Resource
type SchedulerV2ReleaseInfoResourceObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Release Object Resource
	Resource *SchedulerV2ReleaseInfoResource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// Release Object Data
	Data *SchedulerV2ReleaseInfoResourceObjectData `protobuf:"bytes,2,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *SchedulerV2ReleaseInfoResourceObject) Reset() {
	*x = SchedulerV2ReleaseInfoResourceObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulerV2ReleaseInfoResourceObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerV2ReleaseInfoResourceObject) ProtoMessage() {}

func (x *SchedulerV2ReleaseInfoResourceObject) ProtoReflect() protoreflect.Message {
	mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerV2ReleaseInfoResourceObject.ProtoReflect.Descriptor instead.
func (*SchedulerV2ReleaseInfoResourceObject) Descriptor() ([]byte, []int) {
	return file_integrations_scheduler_v2_definition_release_proto_rawDescGZIP(), []int{2}
}

func (x *SchedulerV2ReleaseInfoResourceObject) GetResource() *SchedulerV2ReleaseInfoResource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *SchedulerV2ReleaseInfoResourceObject) GetData() *SchedulerV2ReleaseInfoResourceObjectData {
	if x != nil {
		return x.Data
	}
	return nil
}

// Release Object Info Resource bytes
type SchedulerV2ReleaseInfoResourceObjectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Release Object Json Bytes
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SchedulerV2ReleaseInfoResourceObjectData) Reset() {
	*x = SchedulerV2ReleaseInfoResourceObjectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulerV2ReleaseInfoResourceObjectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerV2ReleaseInfoResourceObjectData) ProtoMessage() {}

func (x *SchedulerV2ReleaseInfoResourceObjectData) ProtoReflect() protoreflect.Message {
	mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerV2ReleaseInfoResourceObjectData.ProtoReflect.Descriptor instead.
func (*SchedulerV2ReleaseInfoResourceObjectData) Descriptor() ([]byte, []int) {
	return file_integrations_scheduler_v2_definition_release_proto_rawDescGZIP(), []int{3}
}

func (x *SchedulerV2ReleaseInfoResourceObjectData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Release Object Info Resource Meta
type SchedulerV2ReleaseInfoResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GroupVersionKind
	Gvk *SchedulerV2GVK `protobuf:"bytes,1,opt,name=gvk,proto3" json:"gvk,omitempty"`
	// Kubernetes API Object Name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Kubernetes API Object Namespace
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *SchedulerV2ReleaseInfoResource) Reset() {
	*x = SchedulerV2ReleaseInfoResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulerV2ReleaseInfoResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerV2ReleaseInfoResource) ProtoMessage() {}

func (x *SchedulerV2ReleaseInfoResource) ProtoReflect() protoreflect.Message {
	mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerV2ReleaseInfoResource.ProtoReflect.Descriptor instead.
func (*SchedulerV2ReleaseInfoResource) Descriptor() ([]byte, []int) {
	return file_integrations_scheduler_v2_definition_release_proto_rawDescGZIP(), []int{4}
}

func (x *SchedulerV2ReleaseInfoResource) GetGvk() *SchedulerV2GVK {
	if x != nil {
		return x.Gvk
	}
	return nil
}

func (x *SchedulerV2ReleaseInfoResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SchedulerV2ReleaseInfoResource) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// GroupVersionKind
type SchedulerV2GVK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kubernetes API Group
	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	// Kubernetes API Version
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Kubernetes API Kind
	Kind string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *SchedulerV2GVK) Reset() {
	*x = SchedulerV2GVK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulerV2GVK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerV2GVK) ProtoMessage() {}

func (x *SchedulerV2GVK) ProtoReflect() protoreflect.Message {
	mi := &file_integrations_scheduler_v2_definition_release_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerV2GVK.ProtoReflect.Descriptor instead.
func (*SchedulerV2GVK) Descriptor() ([]byte, []int) {
	return file_integrations_scheduler_v2_definition_release_proto_rawDescGZIP(), []int{5}
}

func (x *SchedulerV2GVK) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *SchedulerV2GVK) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SchedulerV2GVK) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

var File_integrations_scheduler_v2_definition_release_proto protoreflect.FileDescriptor

var file_integrations_scheduler_v2_definition_release_proto_rawDesc = []byte{
	0x0a, 0x32, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xbb, 0x02, 0x0a, 0x12, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x56, 0x32,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x56, 0x32, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x3a,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x72, 0x56, 0x32, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xd4,
	0x03, 0x0a, 0x16, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x56, 0x32, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0e, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52,
	0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x44, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x56, 0x32, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x56, 0x32, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x24, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x56, 0x32, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x45,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x56, 0x32, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x56, 0x32, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x28,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x56, 0x32, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7f, 0x0a, 0x1e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x56, 0x32, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2b,
	0x0a, 0x03, 0x67, 0x76, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x56, 0x32, 0x47, 0x56, 0x4b, 0x52, 0x03, 0x67, 0x76, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x54, 0x0a,
	0x0e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x56, 0x32, 0x47, 0x56, 0x4b, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x2a, 0xea, 0x03, 0x0a, 0x1c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x56, 0x32, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x34, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45,
	0x52, 0x5f, 0x56, 0x32, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2d,
	0x0a, 0x29, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x56, 0x32, 0x5f, 0x52,
	0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x45, 0x44, 0x10, 0x01, 0x12, 0x30, 0x0a,
	0x2c, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x56, 0x32, 0x5f, 0x52, 0x45,
	0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x2f, 0x0a, 0x2b, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x56, 0x32, 0x5f,
	0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x50, 0x45, 0x52, 0x53, 0x45, 0x44, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x2b, 0x0a, 0x27, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x56, 0x32,
	0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x31, 0x0a,
	0x2d, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x56, 0x32, 0x5f, 0x52, 0x45,
	0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x05,
	0x12, 0x33, 0x0a, 0x2f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x56, 0x32,
	0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x49, 0x4e, 0x53, 0x54,
	0x41, 0x4c, 0x4c, 0x10, 0x06, 0x12, 0x33, 0x0a, 0x2f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c,
	0x45, 0x52, 0x5f, 0x56, 0x32, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x10, 0x07, 0x12, 0x34, 0x0a, 0x30, 0x53, 0x43,
	0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x56, 0x32, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41,
	0x53, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x52, 0x4f, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x08,
	0x42, 0x48, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x72, 0x61, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x2d, 0x61, 0x72, 0x61,
	0x6e, 0x67, 0x6f, 0x64, 0x62, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x2f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_integrations_scheduler_v2_definition_release_proto_rawDescOnce sync.Once
	file_integrations_scheduler_v2_definition_release_proto_rawDescData = file_integrations_scheduler_v2_definition_release_proto_rawDesc
)

func file_integrations_scheduler_v2_definition_release_proto_rawDescGZIP() []byte {
	file_integrations_scheduler_v2_definition_release_proto_rawDescOnce.Do(func() {
		file_integrations_scheduler_v2_definition_release_proto_rawDescData = protoimpl.X.CompressGZIP(file_integrations_scheduler_v2_definition_release_proto_rawDescData)
	})
	return file_integrations_scheduler_v2_definition_release_proto_rawDescData
}

var file_integrations_scheduler_v2_definition_release_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_integrations_scheduler_v2_definition_release_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_integrations_scheduler_v2_definition_release_proto_goTypes = []interface{}{
	(SchedulerV2ReleaseInfoStatus)(0),                // 0: scheduler.SchedulerV2ReleaseInfoStatus
	(*SchedulerV2Release)(nil),                       // 1: scheduler.SchedulerV2Release
	(*SchedulerV2ReleaseInfo)(nil),                   // 2: scheduler.SchedulerV2ReleaseInfo
	(*SchedulerV2ReleaseInfoResourceObject)(nil),     // 3: scheduler.SchedulerV2ReleaseInfoResourceObject
	(*SchedulerV2ReleaseInfoResourceObjectData)(nil), // 4: scheduler.SchedulerV2ReleaseInfoResourceObjectData
	(*SchedulerV2ReleaseInfoResource)(nil),           // 5: scheduler.SchedulerV2ReleaseInfoResource
	(*SchedulerV2GVK)(nil),                           // 6: scheduler.SchedulerV2GVK
	nil,                                              // 7: scheduler.SchedulerV2Release.LabelsEntry
	(*timestamppb.Timestamp)(nil),                    // 8: google.protobuf.Timestamp
}
var file_integrations_scheduler_v2_definition_release_proto_depIdxs = []int32{
	7,  // 0: scheduler.SchedulerV2Release.labels:type_name -> scheduler.SchedulerV2Release.LabelsEntry
	2,  // 1: scheduler.SchedulerV2Release.info:type_name -> scheduler.SchedulerV2ReleaseInfo
	8,  // 2: scheduler.SchedulerV2ReleaseInfo.first_deployed:type_name -> google.protobuf.Timestamp
	8,  // 3: scheduler.SchedulerV2ReleaseInfo.last_deployed:type_name -> google.protobuf.Timestamp
	8,  // 4: scheduler.SchedulerV2ReleaseInfo.deleted:type_name -> google.protobuf.Timestamp
	0,  // 5: scheduler.SchedulerV2ReleaseInfo.status:type_name -> scheduler.SchedulerV2ReleaseInfoStatus
	5,  // 6: scheduler.SchedulerV2ReleaseInfo.resources:type_name -> scheduler.SchedulerV2ReleaseInfoResource
	5,  // 7: scheduler.SchedulerV2ReleaseInfoResourceObject.resource:type_name -> scheduler.SchedulerV2ReleaseInfoResource
	4,  // 8: scheduler.SchedulerV2ReleaseInfoResourceObject.data:type_name -> scheduler.SchedulerV2ReleaseInfoResourceObjectData
	6,  // 9: scheduler.SchedulerV2ReleaseInfoResource.gvk:type_name -> scheduler.SchedulerV2GVK
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_integrations_scheduler_v2_definition_release_proto_init() }
func file_integrations_scheduler_v2_definition_release_proto_init() {
	if File_integrations_scheduler_v2_definition_release_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_integrations_scheduler_v2_definition_release_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulerV2Release); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integrations_scheduler_v2_definition_release_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulerV2ReleaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integrations_scheduler_v2_definition_release_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulerV2ReleaseInfoResourceObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integrations_scheduler_v2_definition_release_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulerV2ReleaseInfoResourceObjectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integrations_scheduler_v2_definition_release_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulerV2ReleaseInfoResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integrations_scheduler_v2_definition_release_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulerV2GVK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_integrations_scheduler_v2_definition_release_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_integrations_scheduler_v2_definition_release_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_integrations_scheduler_v2_definition_release_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_integrations_scheduler_v2_definition_release_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_integrations_scheduler_v2_definition_release_proto_goTypes,
		DependencyIndexes: file_integrations_scheduler_v2_definition_release_proto_depIdxs,
		EnumInfos:         file_integrations_scheduler_v2_definition_release_proto_enumTypes,
		MessageInfos:      file_integrations_scheduler_v2_definition_release_proto_msgTypes,
	}.Build()
	File_integrations_scheduler_v2_definition_release_proto = out.File
	file_integrations_scheduler_v2_definition_release_proto_rawDesc = nil
	file_integrations_scheduler_v2_definition_release_proto_goTypes = nil
	file_integrations_scheduler_v2_definition_release_proto_depIdxs = nil
}
