//
// DISCLAIMER
//
// Copyright 2024 ArangoDB GmbH, Cologne, Germany
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright holder is ArangoDB GmbH, Cologne, Germany
//

syntax = "proto3";

package shutdown;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/arangodb/kube-arangodb/integrations/storage/v2/definition";

// Defines StorageV2 Service
service StorageV2 {
  // Allows to init the Storage settings (like bucket creation)
  rpc Init(StorageV2InitRequest) returns (StorageV2InitResponse);

  // Allows to Read Objects using stream
  rpc ReadObject(StorageV2ReadObjectRequest) returns (stream StorageV2ReadObjectResponse);

  // Allows to Write Objects using stream
  rpc WriteObject(stream StorageV2WriteObjectRequest) returns (StorageV2WriteObjectResponse);

  // Gets basic info about object
  rpc HeadObject(StorageV2HeadObjectRequest) returns (StorageV2HeadObjectResponse);
  
  // Deletes object
  rpc DeleteObject(StorageV2DeleteObjectRequest) returns (StorageV2DeleteObjectResponse);
  
  // List all objects in batches
  rpc ListObjects(StorageV2ListObjectsRequest) returns (stream StorageV2ListObjectsResponse);
}

// Defines Object Path/Key
message StorageV2Path {
  // Defines Object Path/Key
  string path = 1;
}

// Defines Object Details
message StorageV2Object {
  // Defines Object Path/Key
  StorageV2Path path = 1;
  // Defines Object Info
  StorageV2ObjectInfo info = 2;
}

// Defines Object Info
message StorageV2ObjectInfo {
  // Size in bytes of the object
  uint64 size = 1;
  // Timestamp of last update
  google.protobuf.Timestamp last_updated = 2;
}

// StorageV2 Init Request
message StorageV2InitRequest {
  // Defines if required resources should be created
  optional bool create = 1;
}

// StorageV2 Init Response
message StorageV2InitResponse {
}

// StorageV2 ReadObject Request
message StorageV2ReadObjectRequest {
  // Defines Object Path/Key
  StorageV2Path path = 1;
}

// StorageV2 ReadObject Response
message StorageV2ReadObjectResponse {
  // Bytes of the object
  bytes chunk = 1;
}

// StorageV2 WriteObject Request
message StorageV2WriteObjectRequest {
  // Defines Object Path/Key
  StorageV2Path path = 1;
  // Bytes of the object
  bytes chunk = 2;
}

// StorageV2 WriteObject Response
message StorageV2WriteObjectResponse {
  // Bytes Saved
  int64 bytes =1;
  // Checksum (sha256) of the object
  string checksum = 2;
}

// StorageV2 HeadObject Request
message StorageV2HeadObjectRequest {
  // Defines Object Path/Key
  StorageV2Path path = 1;
}

// StorageV2 HeadObject Response
message StorageV2HeadObjectResponse {
  // Defines Object Info
  StorageV2ObjectInfo info = 1;
}

// StorageV2 DeleteObject Request
message StorageV2DeleteObjectRequest {
  // Defines Object Path/Key
  StorageV2Path path = 1;
}

// StorageV2 DeleteObject Response
message StorageV2DeleteObjectResponse {
}

// StorageV2 ListObjects Request
message StorageV2ListObjectsRequest {
  // Defines Object Path/Key
  StorageV2Path path = 1;
}

// StorageV2 ListObjects Response
message StorageV2ListObjectsResponse {
  // List of the objects
  repeated StorageV2Object files = 1;
}