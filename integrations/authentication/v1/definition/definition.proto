//
// DISCLAIMER
//
// Copyright 2016-2022 ArangoDB GmbH, Cologne, Germany
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright holder is ArangoDB GmbH, Cologne, Germany
//

syntax = "proto3";

package authentication;

import "google/api/annotations.proto";

import "google/protobuf/duration.proto";

import "integrations/shared/v1/definition/empty.proto";

option go_package = "github.com/arangodb/kube-arangodb/integrations/authentication/v1/definition";

// AuthenticationV1 define ServiceInterface for Authentication V1
service AuthenticationV1 {
  // Validate and ensure that Authentication details are valid returns information about the user
  rpc Validate (ValidateRequest) returns (ValidateResponse) {
    option (google.api.http) = {
      post: "/_integration/authn/v1/validate"
      body: "*"
    };
  }

  // CreateToken creates a token for the specified user
  rpc CreateToken (CreateTokenRequest) returns (CreateTokenResponse) {
    option (google.api.http) = {
      post: "/_integration/authn/v1/createToken"
      body: "*"
    };
  }

  // Identity extracts the identity from the request
  rpc Identity (shared.Empty) returns (IdentityResponse) {
    option (google.api.http) = {
      get: "/_integration/authn/v1/identity"
    };
  }

  // Login calls /_open/auth endpoint to create JWT Token. Optionally, sets the header.
  rpc Login (LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/_integration/authn/v1/login"
      body: "*"
    };
  }

  // Logout ensures that credentials and cookies are removed
  rpc Logout (LogoutRequest) returns (shared.Empty) {
    option (google.api.http) = {
      get: "/_integration/authn/v1/logout"
    };
  }
}

// ValidateRequest defines request for AuthenticationV1 Validate Request
message ValidateRequest {
  // token specifies a token extracted from the request or used currently
  string token = 1;
}

// ValidateResponse defines response for AuthenticationV1 Validate Request
message ValidateResponse {
  // is_valid returns information about the validity of the token
  bool is_valid = 1;

  // message message for the validation phase
  string message = 2;

  // details returns token details if the token is valid
  optional ValidateResponseDetails details = 3;
}

// IdentityResponse defines response for AuthenticationV1 Identity Request
message IdentityResponse {
  // user returns the User used in the Token. If a user is not specified, `root` is returned
  string user = 1;
}

// ValidateResponseDetails defines optional response for AuthenticationV1 Validate Request.
// Returned only if the Token provided in the request is valid.
message ValidateResponseDetails {
  // lifetime specify the lifetime of the token
  google.protobuf.Duration lifetime = 1;

  // user returns the User used in the Token. If a user is not specified, `root` is returned
  string user = 2;

  // roles specify list of the roles assigned to the token
  repeated string roles = 3;
}

// CreateTokenRequest defines request for AuthenticationV1 CreateToken Request
message CreateTokenRequest {
  // lifetime specifies the lifetime of the token as duration. Defaults to 1 hour
  optional google.protobuf.Duration lifetime = 1;

  // user specify the User for which token should be created. By default, the default user is used (root in most cases)
  optional string user = 2;

  // roles specify list of the roles assigned to the token
  repeated string roles = 3;
}

// CreateTokenResponse defines response for AuthenticationV1 CreateToken Request
message CreateTokenResponse {
  // lifetime specify the lifetime of the token as the duration
  google.protobuf.Duration lifetime = 1;

  // user returns the User used in the Token
  string user = 2;

  // token returns the Token as a string
  string token = 3;

  // roles specify list of the roles assigned to the token
  repeated string roles = 4;
}

// LoginRequest defines response for AuthenticationV1 Login Request
message LoginRequest {
  // credentials defines the login credentials
  LoginRequestCredentials credentials = 1;

  // options define the login request options
  LoginRequestOptions options = 2;
}

// LoginResponse defines response for AuthenticationV1 Login Response
message LoginResponse {
  // token returns the JWT Token
  string token = 1;
}

// LoginRequestCredentials defines response for AuthenticationV1 Login Credentials Request
message LoginRequestCredentials {
  // username defines user for the authentication
  string username = 1;

  // password defines password for the authentication
  string password = 2;
}

// LoginRequestCredentials defines response for AuthenticationV1 Login Options Request
message LoginRequestOptions {
  // cookies enables the cookie management
  optional bool cookies = 1;
}

// LogoutRequest defines request for AuthenticationV1 Logout Request
message LogoutRequest {
  // location defines logout location - defaults to /
  optional string location = 1;
}

