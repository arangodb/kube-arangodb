//
// DISCLAIMER
//
// Copyright 2016-2022 ArangoDB GmbH, Cologne, Germany
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright holder is ArangoDB GmbH, Cologne, Germany
//

syntax = "proto3";

package server;

import "integrations/shared/v1/definition/empty.proto";

option go_package = "github.com/arangodb/kube-arangodb/pkg/api/server";

// Operator defined Operator service
service Operator {
  // GetVersion returns Operator version
  rpc GetVersion (shared.Empty) returns (Version) {}

  // GetLogLevel returns Operator LogLevels
  rpc GetLogLevel (shared.Empty) returns (LogLevelConfig) {}

  // SetLogLevel sets Operator LogLevels
  rpc SetLogLevel (LogLevelConfig) returns (shared.Empty) {}
}

// Version define the version details
message Version {
  // version keeps version info
  string version = 1;
  // build keeps build info
  string build = 2;
  // edition keeps the Operator edition
  string edition = 3;
  // go_version keeps the version of go used in build
  string go_version = 4;
  // build_date keeps the build date
  string build_date = 5;
}

// LogLevel defined the Log Levels
enum LogLevel {
  // LOG_LEVEL_TRACE_UNSPECIFIED defines Trace or Undefined log level
  LOG_LEVEL_TRACE_UNSPECIFIED = 0;
  // LOG_LEVEL_DEBUG defines Debug log level
  LOG_LEVEL_DEBUG = 1;
  // LOG_LEVEL_INFO defines Info log level
  LOG_LEVEL_INFO = 2;
  // LOG_LEVEL_WARN defines Warn log level
  LOG_LEVEL_WARN = 3;
  // LOG_LEVEL_ERROR defines Error log level
  LOG_LEVEL_ERROR = 4;
  // LOG_LEVEL_FATAL defines Fatal log level
  LOG_LEVEL_FATAL = 5;
}

// LogLevelConfig define the LogLevel Configs
message LogLevelConfig {
  // topics define map of the topics and corresponding log levels
  map<string, LogLevel> topics = 1;
}
