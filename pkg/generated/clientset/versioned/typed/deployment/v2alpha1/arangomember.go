//
// DISCLAIMER
//
// Copyright 2025 ArangoDB GmbH, Cologne, Germany
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright holder is ArangoDB GmbH, Cologne, Germany
//

// Code generated by client-gen. DO NOT EDIT.

package v2alpha1

import (
	context "context"

	deploymentv2alpha1 "github.com/arangodb/kube-arangodb/pkg/apis/deployment/v2alpha1"
	scheme "github.com/arangodb/kube-arangodb/pkg/generated/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ArangoMembersGetter has a method to return a ArangoMemberInterface.
// A group's client should implement this interface.
type ArangoMembersGetter interface {
	ArangoMembers(namespace string) ArangoMemberInterface
}

// ArangoMemberInterface has methods to work with ArangoMember resources.
type ArangoMemberInterface interface {
	Create(ctx context.Context, arangoMember *deploymentv2alpha1.ArangoMember, opts v1.CreateOptions) (*deploymentv2alpha1.ArangoMember, error)
	Update(ctx context.Context, arangoMember *deploymentv2alpha1.ArangoMember, opts v1.UpdateOptions) (*deploymentv2alpha1.ArangoMember, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, arangoMember *deploymentv2alpha1.ArangoMember, opts v1.UpdateOptions) (*deploymentv2alpha1.ArangoMember, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*deploymentv2alpha1.ArangoMember, error)
	List(ctx context.Context, opts v1.ListOptions) (*deploymentv2alpha1.ArangoMemberList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *deploymentv2alpha1.ArangoMember, err error)
	ArangoMemberExpansion
}

// arangoMembers implements ArangoMemberInterface
type arangoMembers struct {
	*gentype.ClientWithList[*deploymentv2alpha1.ArangoMember, *deploymentv2alpha1.ArangoMemberList]
}

// newArangoMembers returns a ArangoMembers
func newArangoMembers(c *DatabaseV2alpha1Client, namespace string) *arangoMembers {
	return &arangoMembers{
		gentype.NewClientWithList[*deploymentv2alpha1.ArangoMember, *deploymentv2alpha1.ArangoMemberList](
			"arangomembers",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *deploymentv2alpha1.ArangoMember { return &deploymentv2alpha1.ArangoMember{} },
			func() *deploymentv2alpha1.ArangoMemberList { return &deploymentv2alpha1.ArangoMemberList{} },
		),
	}
}
