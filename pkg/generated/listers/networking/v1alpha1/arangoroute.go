//
// DISCLAIMER
//
// Copyright 2024 ArangoDB GmbH, Cologne, Germany
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright holder is ArangoDB GmbH, Cologne, Germany
//

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/arangodb/kube-arangodb/pkg/apis/networking/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// ArangoRouteLister helps list ArangoRoutes.
// All objects returned here must be treated as read-only.
type ArangoRouteLister interface {
	// List lists all ArangoRoutes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ArangoRoute, err error)
	// ArangoRoutes returns an object that can list and get ArangoRoutes.
	ArangoRoutes(namespace string) ArangoRouteNamespaceLister
	ArangoRouteListerExpansion
}

// arangoRouteLister implements the ArangoRouteLister interface.
type arangoRouteLister struct {
	listers.ResourceIndexer[*v1alpha1.ArangoRoute]
}

// NewArangoRouteLister returns a new ArangoRouteLister.
func NewArangoRouteLister(indexer cache.Indexer) ArangoRouteLister {
	return &arangoRouteLister{listers.New[*v1alpha1.ArangoRoute](indexer, v1alpha1.Resource("arangoroute"))}
}

// ArangoRoutes returns an object that can list and get ArangoRoutes.
func (s *arangoRouteLister) ArangoRoutes(namespace string) ArangoRouteNamespaceLister {
	return arangoRouteNamespaceLister{listers.NewNamespaced[*v1alpha1.ArangoRoute](s.ResourceIndexer, namespace)}
}

// ArangoRouteNamespaceLister helps list and get ArangoRoutes.
// All objects returned here must be treated as read-only.
type ArangoRouteNamespaceLister interface {
	// List lists all ArangoRoutes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ArangoRoute, err error)
	// Get retrieves the ArangoRoute from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ArangoRoute, error)
	ArangoRouteNamespaceListerExpansion
}

// arangoRouteNamespaceLister implements the ArangoRouteNamespaceLister
// interface.
type arangoRouteNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.ArangoRoute]
}
